{"ast":null,"code":"var _jsxFileName = \"/Users/sonnguyen/web_info_project/frontend/src/components/mainPage/reminder/reminder.js\",\n    _s = $RefreshSig$();\n\nimport \"./reminder.css\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reminder = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  let [isLoaded, setIsLoaded] = useState(false);\n  let [err, setErr] = useState(null);\n  useEffect(() => {\n    const getData = () => {\n      fetch('http://localhost:9999/posts').then(res => {\n        if (res.status >= 400) {\n          throw new Error(\"Server responds with error\");\n        }\n\n        return res.json();\n      }).then(resdata => {\n        setIsLoaded(true);\n        setPosts(resdata);\n      }, err => {\n        setErr(err);\n        setIsLoaded(true);\n      });\n    };\n\n    getData();\n  }, []);\n\n  function getTime(posts) {\n    let min = Number.MAX_VALUE;\n    let index = 0;\n    let dateNow = new Date();\n\n    for (let i = 0; i < posts.length; i++) {\n      if (posts[i].status === \"Not done\") {\n        let date = new Date(posts[i].deadline);\n        let seconds = Math.floor((date - dateNow) / 1000);\n        let minutes = Math.floor(seconds / 60);\n\n        if (minutes < min) {\n          min = minutes;\n          index = i;\n        }\n      }\n    }\n\n    let date = new Date(posts[index].deadline);\n    let diff = date.getTime() - dateNow.getTime();\n    let hours = Math.floor(diff / (1000 * 60 * 60));\n    let minutes = Math.floor(diff / (1000 * 60));\n    let seconds = Math.floor(diff / 1000);\n    let days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    return {\n      days,\n      hours,\n      minutes,\n      seconds\n    };\n  }\n\n  let time = getTime(posts);\n\n  if (err) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", err.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please finish your assignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reminder-time-day\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: time.days / 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: time.days % 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reminder-time-hour\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: time.hours / 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: time.hours % 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reminder-time-minute\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: time.minutes / 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: time.minutes % 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Reminder, \"MB0u0wYi8AOEw7gGDE+uWC52u+I=\");\n\n_c = Reminder;\nexport default Reminder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"names":["useEffect","useState","Reminder","posts","setPosts","isLoaded","setIsLoaded","err","setErr","getData","fetch","then","res","status","Error","json","resdata","getTime","min","Number","MAX_VALUE","index","dateNow","Date","i","length","date","deadline","seconds","Math","floor","minutes","diff","hours","days","time","message"],"sources":["/Users/sonnguyen/web_info_project/frontend/src/components/mainPage/reminder/reminder.js"],"sourcesContent":["import \"./reminder.css\";\nimport { useEffect, useState } from 'react';\n\nconst Reminder = () => {\n    const [posts, setPosts] = useState([]);\n    let [isLoaded, setIsLoaded] = useState(false);\n    let [err, setErr] = useState(null);\n\n    useEffect(() => {\n        const getData = () => {\n            fetch('http://localhost:9999/posts')\n                .then(res => {\n                    if (res.status >= 400) {\n                        throw new Error(\"Server responds with error\");\n                    }\n                    return res.json();\n                })\n                .then(resdata => {\n                    setIsLoaded(true);\n                    setPosts(resdata);\n                }, err => {\n                    setErr(err);\n                    setIsLoaded(true);\n                })\n        };\n        getData()\n    }, [])\n    function getTime(posts) {\n        let min = Number.MAX_VALUE;\n        let index = 0;\n        let dateNow = new Date();\n        for (let i = 0; i < posts.length; i++) {\n            if (posts[i].status === \"Not done\") {\n                let date = new Date(posts[i].deadline);\n                let seconds = Math.floor((date - dateNow) / 1000);\n                let minutes = Math.floor(seconds / 60);\n                if (minutes < min) {\n                    min = minutes;\n                    index = i;\n                }\n            }\n        }\n        let date = new Date(posts[index].deadline);\n        let diff = date.getTime() - dateNow.getTime();\n        let hours = Math.floor(diff / (1000 * 60 * 60));\n        let minutes = Math.floor(diff / (1000 * 60));\n        let seconds = Math.floor(diff / 1000);\n        let days = Math.floor(diff / (1000 * 60 * 60 * 24));\n        return {days, hours, minutes, seconds};\n    }\n\n    let time = getTime(posts);\n    if (err) {\n        return <div>Error: {err.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className=\"reminder\">\n                <div className=\"reminder-title\">\n                    <p>Please finish your assignment</p>\n                </div>\n                <div className=\"reminder-time\">\n                    <div className=\"reminder-time-day\">\n                        <div>\n                            <span>{time.days / 10}</span>\n                            <span>{time.days % 10}</span>\n                        </div>\n                        <p>days</p>\n                    </div>\n                    <div className=\"reminder-time-hour\">\n                        <div>\n                            <span>{time.hours / 10}</span>\n                            <span>{time.hours % 10}</span>\n                        </div>\n                        <p>hours</p>\n                    </div>\n                    <div className=\"reminder-time-minute\">\n                        <div>\n                            <span>{time.minutes / 10}</span>\n                            <span>{time.minutes % 10}</span>\n                        </div>\n                        <p>minutes</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Reminder;"],"mappings":"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"},"metadata":{},"sourceType":"module"}